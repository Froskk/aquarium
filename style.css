[data-theme="default"] {
  --fg: hsl(0, 0%, 25%);
  --border: hsl(0, 0%, 75%);

  --bg: hsl(0, 0%, 95%);
  --button-bg: hsl(0, 0%, 99%);
  --input-bg: hsl(0, 0%, 90%);
}

[data-theme="dark"] {
  --fg: hsl(0, 10%, 70%);
  --border: hsl(0, 10%, 10%);

  --bg: hsl(0, 0%, 20%);
  --button-bg: hsl(0, 0%, 25%);
  --input-bg: hsl(0, 0%, 15%);
}

[data-theme] {
  color: var(--fg);
  background-color: var(--bg);
}

body {
  font-family: "Quicksand", sans-serif;
  -moz-osx-font-smoothing: grayscale;
}

.app {
  width: 100vw;
  height: 100vh;
  overflow: auto;
  display: flex;
  flex-direction: column;
}

header {
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 0.3em;
}

header h1 {
  color: #00d4ff;
  background: linear-gradient(68deg, #fff300, #00d4ff);
  background-clip: inherit;
  background-size: 200% 400%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;

  -webkit-animation: HeaderFlow 20s ease infinite;
  -moz-animation: HeaderFlow 20s ease infinite;
  animation: HeaderFlow 20s ease infinite;
}

header > ul {
  display: flex;
  align-items: center;
}

header > ul > li {
  padding: 0.4em 0.75em;
}

header svg {
  width: 2em;
  fill: var(--fg);
}

.timer {
  width: 6em;
  text-align: right;
}

.game {
  width: 100%;
  height: 100%;
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
}

.grid,
.grid > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.grid {
  flex-direction: column;
}

.controls {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  width: 80%;
}

.tool {
  position: relative;
}

.tool > a {
  position: absolute;
  padding: 1em;
}

.tool svg {
  fill: #fff;
}

.tool svg .tool-list-container {
  padding: 1em;
}

.tool.active {
  opacity: 1;
}

.tool:not(.active) {
  opacity: 0.4;
}

.tool-list-container > ul {
  display: flex;
}

.tool + .tool {
  margin-left: 0.8em;
}

.tool-list-container > ul > li {
  background: var(--button-bg);
  border-radius: 8px;
  width: 10vmin;
  height: 10vmin;
  min-width: 4em;
  min-height: 4em;
}

.cell,
.cell-label,
.cell-empty {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 4em;
  font-size: 9vmin;
  width: 12vmin;
  height: 12vmin;
}

.on {
  background: #2b7e82dd;
}

.cell:not(.on) {
  background: #b4f2abdd;
}

.cell {
  position: relative;
}

.cell::before {
  border: 1px solid #ffffff;
  opacity: 0.2;
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
}

/* TODO: Add transitions */
/* FIXME: Is this a real use-case for !important? */
/* border-left and -top are unset by sibling selectors
   to avoid double-borders */
.cell:hover::before {
  border: 2px dashed #fff !important;
  opacity: 1;
}

.cell-label {
  cursor: pointer;
  border: 1px dashed #ffffff33;
}

/* TODO: Make a toggle for inactive state */
.cell-label:active {
  border: 1px dashed #ffffff;
  opacity: 0.2;
}

.row > .cell-label {
  border-right: none;
}

.row-label > .cell-label {
  border-bottom: none;
}

.cell + .cell::before,
.cell-label + .cell-label {
  border-left: none;
}

.row + .row > .cell::before,
.row + .row > .cell-label {
  border-top: none;
}

.hidden {
  visibility: hidden;
}

@-webkit-keyframes HeaderFlow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
@-moz-keyframes HeaderFlow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes HeaderFlow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@media (min-width: 400px) and (orientation: landscape) {
  .game {
    flex-direction: row;
  }

  .tool-list-container > ul {
    flex-direction: column;
  }

  .tool + .tool {
    margin-left: 0;
    margin-top: 0.8em;
  }

  .controls {
    flex-direction: column;
    flex-wrap: nowrap;
    width: unset;
    height: 72vmin;
  }
}
